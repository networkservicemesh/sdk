---
name: ci
on:
  pull_request:
  push:
    branches:
      - release/**
jobs:
  yamllint:
    uses: networkservicemesh/.github/.github/workflows/yamllint.yaml@main
  build-and-test:
    uses: networkservicemesh/.github/.github/workflows/build-and-test.yaml@main
    with:
      os: '["ubuntu-latest", "macos-latest", "windows-latest"]'
  golangci-lint:
    uses: networkservicemesh/.github/.github/workflows/golangci-lint.yaml@main
    with:
      linter-version: v1.53.3
  exclude-fmt-errorf:
    uses: networkservicemesh/.github/.github/workflows/exclude-fmt-errorf.yaml@main
  restrict-nsm-deps:
    uses: networkservicemesh/.github/.github/workflows/restrict-nsm-deps.yaml@main
    with:
      allowed_repositories: api
  checkgomod:
    uses: networkservicemesh/.github/.github/workflows/checkgomod.yaml@main
  gogenerate:
    uses: networkservicemesh/.github/.github/workflows/sdk-gogenerate.yaml@main
  exclude-replace:
    uses: networkservicemesh/.github/.github/workflows/exclude-replace.yaml@main
  trivy-scan-repo:
    name: Scan repo with Trivy
    permissions:
      contents: read
      security-events: write
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@fbd16365eb88e12433951383f5e99bd901fc618f
        with:
          scan-type: fs
          scan-ref: .
          ignore-unfixed: true
          format: template
          template: '@/contrib/sarif.tpl'
          output: trivy-repo-results.sarif
          severity: 'HIGH,CRITICAL'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-repo-results.sarif
  tfsec:
    name: tfsec sarif report
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Clone repo
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: tfsec
        uses: aquasecurity/tfsec-sarif-action@v0.1.0
        with:
          sarif_file: tfsec.sarif
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: tfsec.sarif
  code-cov:
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.20.5
      - run: >
          go test -coverprofile=coverage-${{ matrix.os }}.txt -covermode=atomic
          -race ./...
      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v3
